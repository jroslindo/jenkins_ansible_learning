pipeline {
    agent any

    environment {
        githubRepo = 'https://github.com/jroslindo/jenkins_ansible_learning'
        pythonRun         = 'nohup $HOME/.local/bin/poetry run python3 __main__.py > /dev/null 2>&1 &'
        pythonTestCommand = '$HOME/.local/bin/poetry run python3 test_example.py'
        ansiblePlaybook = '/code/playbook.yml'
        PATH = "$HOME/.poetry/bin:$PATH"
    }

    stages {
        stage('Check for updates / clone repo') {
            steps {
                script {

                    echo "Repository has an update. Cloning..."
                    sh "git clone ${githubRepo}"
                }
            }
        }

        stage('Install Poetry') {
            steps {
                script {
                    // Install Poetry
                    sh 'curl -sSL https://install.python-poetry.org | python3'

                    // // Add Poetry to PATH
                    sh 'echo "export PATH=$HOME/.poetry/bin:$PATH" >> $HOME/.bashrc'

                }
            }
        }

        stage('Run Flask app') {
            steps {
                script {
                    dir('jenkins_ansible_learning/server') {
                        // Start the Flask app
                        sh '$HOME/.local/bin/poetry install --no-root'
                        sh pythonRun
                        sleep 5  // Wait for the Flask app to start
                    }
                }
            }
        }

        stage('test app') {
            steps {
                script {
                    dir('jenkins_ansible_learning/server') {
                        // Start the Flask app
                        sh pythonTestCommand
                    }
                }
            }
        }




        // stage('Test Application') {
        //     steps {
        //         dir('jenkins_ansible_learning/server') {
        //             sh '$HOME/.local/bin/poetry install --no-root'
        //             echo "Starting server"
        //             sh pythonRun
        //             echo "Starting test"
        //             sh pythonTestCommand
        //             echo "Finished"
        //         }
        //     }
        // }

        // stage('Deploy with Ansible') {
        //     steps {
        //         script {
        //             // Add your Ansible playbook execution command here
        //             sh "ansible-playbook ${ansiblePlaybook}"
        //         }
        //     }
        // }
    }

    post {
        always {
            cleanWs()
        }
    }
}
